// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.2.2
// LVGL version: 8.2.0
// Project name: SquareLine_Project

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"

extern lv_obj_t * ui_MainScreen;	// pointer to actual main screen
extern lv_obj_t * ui_S1Main;
extern lv_obj_t * ui_S1LabelTitle;
void ui_event_S1RollerStatMode(lv_event_t * e);
extern lv_obj_t * ui_S1RollerStatMode;
void ui_event_S1PanelNav(lv_event_t * e);
extern lv_obj_t * ui_S1PanelNav;
extern lv_obj_t * ui_S1LabelNav;
extern lv_obj_t * ui_S1ImgNav;
extern lv_obj_t * ui_S1BarNavDist;
extern lv_obj_t * ui_S1PanelIcons;
void ui_event_S1ImgIconBTClassic(lv_event_t * e);
extern lv_obj_t * ui_S1ImgIconBTClassic;
void ui_event_S1ImgIconBLEhrm(lv_event_t * e);
extern lv_obj_t * ui_S1ImgIconBLEhrm;
void ui_event_S1ImgIconWifi(lv_event_t * e);
extern lv_obj_t * ui_S1ImgIconWifi;
extern lv_obj_t * ui_S1ArcCadence;
extern lv_obj_t * ui_S1ArcAvg;
extern lv_obj_t * ui_S1ArcSpeed;
extern lv_obj_t * ui_S1BarPuls;
extern lv_obj_t * ui_S1BarPulsLabel;
extern lv_obj_t * ui_S1LabelSpeed;
void ui_event_S1PanelStat(lv_event_t * e);
extern lv_obj_t * ui_S1PanelStat;
extern lv_obj_t * ui_S1PStatLTitle;
extern lv_obj_t * ui_S1PStatLAvg;
extern lv_obj_t * ui_S1PStatLAvgVar;
extern lv_obj_t * ui_S1PStatImgAvgUnit;
extern lv_obj_t * ui_S1PStatLGradientVar;
extern lv_obj_t * ui_S1PStatLGradient;
extern lv_obj_t * ui_S1PStatLspdMax;
extern lv_obj_t * ui_S1PStatLspdMaxVar;
extern lv_obj_t * ui_S1PStatImgSpdMaxUnit;
extern lv_obj_t * ui_S1PStatLDist;
extern lv_obj_t * ui_S1PStatLDistVar;
extern lv_obj_t * ui_S1PStatLTime;
extern lv_obj_t * ui_S1PStatLTimeVar;
extern lv_obj_t * ui_S1BarPowerMode;
void ui_event_S1BarBatt(lv_event_t * e);
extern lv_obj_t * ui_S1BarBatt;
extern lv_obj_t * ui_S1BarBattLabel;
void ui_event_S1LabelClock(lv_event_t * e);
extern lv_obj_t * ui_S1LabelClock;
extern lv_obj_t * ui_S1LabelCad;
void ui_event_ScreenChart(lv_event_t * e);
extern lv_obj_t * ui_ScreenChart;
void ui_event_ScreenChart_Chart1(lv_event_t * e);
extern lv_obj_t * ui_ScreenChart_Chart1;
extern lv_obj_t * ui_ScreenChartLabelInfo;
extern lv_obj_t * ui_ScreenChartLabelSpeed;

extern lv_chart_series_t* ui_ScreenChart_Chart1_series_v;
extern lv_chart_series_t* ui_ScreenChart_Chart1_series_perc_per_minute;
extern lv_chart_series_t* ui_ScreenChart_Chart1_ser_v_per_minute;

void ui_S1Main_screen_init();
void ui_ScreenWifi_screen_init();
void ui_ScreenChart_screen_init();

// Events
void chartModeHeartRate(lv_event_t * e);
void chartModeBatterie(lv_event_t * e);
void chart_up(lv_event_t * e);
void chart_dn(lv_event_t * e);

void statModeChanged(uint8_t mode);
void statModeNext(bool dir);

void resetStats();
void statsTimeMode(bool dir);

typedef enum {
	DSE_delayStandby = 1,
	DSE_toggleStandbyMode,
	DSE_switchOff
} UIDriveStateEvent;
void driveStateUpdate(const UIDriveStateEvent op);

#ifdef __cplusplus
} /*extern "C"*/
#endif
